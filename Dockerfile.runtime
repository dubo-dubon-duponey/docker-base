ARG           RUNTIME_BASE=dubodubonduponey/debian@sha256:60b453989a1ce94d29dd770a812598fe3e2889152cd4501eabbf4b20530806f6
#######################
# Runtime base
# Base image for all runtime environments.
# Provides at build time:
# - automatic user creation
# - automatic copy of "runtime" folder
# - automatic permission setting on said files
# - anything useful from the builder-generic image
# - automatic entrypoint definition and user setting
#######################
# hadolint ignore=DL3006
FROM          $RUNTIME_BASE                                                                                             AS runtime

ARG           DEBIAN_FRONTEND="noninteractive"
ENV           TERM="xterm"
ENV           LANG="C.UTF-8"
ENV           LC_ALL="C.UTF-8"
ENV           TZ="America/Los_Angeles"

ENV           PATH=/boot/bin:$PATH
ENV           LD_LIBRARY_PATH=/boot/lib:$LD_LIBRARY_PATH

# Base
ONBUILD ARG   DEBIAN_FRONTEND="noninteractive"

# Apt behavior
ONBUILD ARG   APT_OPTIONS
ONBUILD ARG   APT_SOURCES
ONBUILD ARG   APT_TRUSTED

ONBUILD ARG   http_proxy
ONBUILD ARG   https_proxy

# Build args
ONBUILD ARG   BUILD_UID=2000

# Labels build args
ONBUILD ARG   BUILD_CREATED="1976-04-14T17:00:00-07:00"
ONBUILD ARG   BUILD_URL="https://github.com/dubo-dubon-duponey/nonexistent"
ONBUILD ARG   BUILD_DOCUMENTATION="https://github.com/dubo-dubon-duponey/nonexistent"
ONBUILD ARG   BUILD_SOURCE="https://github.com/dubo-dubon-duponey/nonexistent"
ONBUILD ARG   BUILD_VERSION="unknown"
ONBUILD ARG   BUILD_REVISION="unknown"
ONBUILD ARG   BUILD_VENDOR="dubodubonduponey"
ONBUILD ARG   BUILD_LICENSES="MIT"
ONBUILD ARG   BUILD_REF_NAME="dubodubonduponey/nonexistent"
ONBUILD ARG   BUILD_TITLE="A DBDBDP image"
ONBUILD ARG   BUILD_DESCRIPTION="So image. Much DBDBDP. Such description."

ONBUILD LABEL org.opencontainers.image.created="$BUILD_CREATED"
ONBUILD LABEL org.opencontainers.image.authors="Dubo Dubon Duponey <dubo-dubon-duponey@farcloser.world>"
ONBUILD LABEL org.opencontainers.image.url="$BUILD_URL"
ONBUILD LABEL org.opencontainers.image.documentation="$BUILD_DOCUMENTATION"
ONBUILD LABEL org.opencontainers.image.source="$BUILD_SOURCE"
ONBUILD LABEL org.opencontainers.image.version="$BUILD_VERSION"
ONBUILD LABEL org.opencontainers.image.revision="$BUILD_REVISION"
ONBUILD LABEL org.opencontainers.image.vendor="$BUILD_VENDOR"
ONBUILD LABEL org.opencontainers.image.licenses="$BUILD_LICENSES"
ONBUILD LABEL org.opencontainers.image.ref.name="$BUILD_REF_NAME"
ONBUILD LABEL org.opencontainers.image.title="$BUILD_TITLE"
ONBUILD LABEL org.opencontainers.image.description="$BUILD_DESCRIPTION"

# The usefulness/security angle of this should be assessed.
ADD           ./overlay.tar /

# Create a restricted user account (no shell, no home, disabled), and add folders
RUN           adduser --system --no-create-home --home /nonexistent --gecos "in dockerfile user" \
                --uid 2000 \
                dubo-dubon-duponey; \
              mkdir -p /boot; \
              mkdir -p /config; \
              mkdir -p /data; \
              mkdir -p /certs; \
              chown -R 2000:root /boot; \
              chown -R 2000:root /config; \
              chown -R 2000:root /data; \
              chown -R 2000:root /certs; \
              epoch="$(date --date "$BUILD_CREATED" +%s)"; \
              touch --no-dereference --date="@$epoch" /boot; \
              touch --no-dereference --date="@$epoch" /config; \
              touch --no-dereference --date="@$epoch" /data; \
              touch --no-dereference --date="@$epoch" /certs;

# Get all relevant files from onbuild
ONBUILD COPY  --chown=$BUILD_UID:root runtime  /

# XXX it seems this may be busting docker build cache capabilities... builds are not cached anymore after that... which is annoying when there is large dependencies (ffmpeg)
# XXX this was changed dramatically - is this problem still true?
# Setup directories and permissions
# The user can access the files as the owner, and root can access as the group (that way, --user root still works without caps).
# Write is granted, although that doesn't really matter in term of security
ONBUILD RUN   set -eu; \
              [ "$BUILD_UID" -eq "2000" ] || { \
                usermod -u "$BUILD_UID" dubo-dubon-duponey; \
                chown -R $BUILD_UID:root /boot; \
                chown -R $BUILD_UID:root /config; \
                chown -R $BUILD_UID:root /data; \
                chown -R $BUILD_UID:root /certs; \
              }; \
              find /boot   -type d -exec chmod -R 555 {} +; \
              find /config -type d -exec chmod -R 555 {} +; \
              find /data   -type d -exec chmod -R 777 {} +; \
              find /certs  -type d -exec chmod -R 777 {} +; \
              find /boot   -type f -exec chmod -R 555 {} +; \
              find /config -type f -exec chmod -R 444 {} +; \
              find /data   -type f -exec chmod -R 666 {} +; \
              find /certs  -type f -exec chmod -R 666 {} +; \
              epoch="$(date --date "$BUILD_CREATED" +%s)"; \
              find /boot -newermt "@$epoch" -exec touch --no-dereference --date="@$epoch" '{}' +; \
              find /config -newermt "@$epoch" -exec touch --no-dereference --date="@$epoch" '{}' +; \
              find /data -newermt "@$epoch" -exec touch --no-dereference --date="@$epoch" '{}' +; \
              find /certs -newermt "@$epoch" -exec touch --no-dereference --date="@$epoch" '{}' +

# Finally downgrade to system user
ONBUILD USER  dubo-dubon-duponey

ENTRYPOINT  ["/boot/entrypoint.sh"]
