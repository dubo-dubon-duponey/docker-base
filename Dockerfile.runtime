ARG           RUNTIME_BASE=dubodubonduponey/debian@sha256:cb25298b653310dd8b7e52b743053415452708912fe0e8d3d0d4ccf6c4003746
#######################
# "Builder"
# This image is meant to provide basic files copied over directly into the base target image.
# Right now:
# - updated ca root
#######################
# hadolint ignore=DL3006
FROM          --platform=$BUILDPLATFORM $RUNTIME_BASE                                                                   AS runtime-builder

ARG           TARGETPLATFORM

ARG           DEBIAN_FRONTEND="noninteractive"
ARG           TERM="xterm"
ARG           LANG="C.UTF-8"
ARG           LC_ALL="C.UTF-8"
ARG           TZ="America/Los_Angeles"

RUN           apt-get update -qq
RUN           apt-get install -qq --no-install-recommends \
                ca-certificates=20190110
RUN           update-ca-certificates

#######################
# Runtime base
# Base image for all runtime environments.
# Provides at build time:
# - automatic user creation
# - automatic copy of "runtime" folder
# - automatic permission setting on said files
# - anything useful from the builder-generic image
# - automatic entrypoint definition and user setting
#######################
# hadolint ignore=DL3006
FROM          $RUNTIME_BASE                                                                                             AS runtime

ARG           DEBIAN_FRONTEND="noninteractive"
ENV           TERM="xterm"
ENV           LANG="C.UTF-8"
ENV           LC_ALL="C.UTF-8"
ENV           TZ="America/Los_Angeles"

ENV           PATH=/boot/bin:$PATH
ENV           LD_LIBRARY_PATH=/boot/lib:$LD_LIBRARY_PATH

# The usefulness/security angle of this should be assessed.
COPY          --from=runtime-builder /etc/ssl/certs /etc/ssl/certs
COPY          --from=runtime-builder /usr/share/ca-certificates /usr/share/ca-certificates

# Base
ONBUILD ARG   DEBIAN_FRONTEND="noninteractive"

# Since the same statement from Debian is already enshrined, make sure we override it for descendants
ONBUILD ARG   APTPROXY=""
ONBUILD RUN   printf 'Acquire::HTTP::proxy "%s";\n' "$APTPROXY" > /etc/apt/apt.conf.d/99-dbdbdp-proxy.conf

# Build args
ONBUILD ARG   BUILD_UID=2000

# Labels build args
ONBUILD ARG   BUILD_CREATED="1976-04-14T17:00:00-07:00"
ONBUILD ARG   BUILD_URL="https://github.com/dubodubonduponey/nonexistent"
ONBUILD ARG   BUILD_DOCUMENTATION="https://github.com/dubodubonduponey/nonexistent"
ONBUILD ARG   BUILD_SOURCE="https://github.com/dubodubonduponey/nonexistent"
ONBUILD ARG   BUILD_VERSION="unknown"
ONBUILD ARG   BUILD_REVISION="unknown"
ONBUILD ARG   BUILD_VENDOR="dubodubonduponey"
ONBUILD ARG   BUILD_LICENSES="MIT"
ONBUILD ARG   BUILD_REF_NAME="dubodubonduponey/nonexistent"
ONBUILD ARG   BUILD_TITLE="A DBDBDP image"
ONBUILD ARG   BUILD_DESCRIPTION="So image. Much DBDBDP. Such description."

ONBUILD LABEL org.opencontainers.image.created="$BUILD_CREATED"
ONBUILD LABEL org.opencontainers.image.authors="Dubo Dubon Duponey <dubo-dubon-duponey@farcloser.world>"
ONBUILD LABEL org.opencontainers.image.url="$BUILD_URL"
ONBUILD LABEL org.opencontainers.image.documentation="$BUILD_DOCUMENTATION"
ONBUILD LABEL org.opencontainers.image.source="$BUILD_SOURCE"
ONBUILD LABEL org.opencontainers.image.version="$BUILD_VERSION"
ONBUILD LABEL org.opencontainers.image.revision="$BUILD_REVISION"
ONBUILD LABEL org.opencontainers.image.vendor="$BUILD_VENDOR"
ONBUILD LABEL org.opencontainers.image.licenses="$BUILD_LICENSES"
ONBUILD LABEL org.opencontainers.image.ref.name="$BUILD_REF_NAME"
ONBUILD LABEL org.opencontainers.image.title="$BUILD_TITLE"
ONBUILD LABEL org.opencontainers.image.description="$BUILD_DESCRIPTION"

# Get all relevant files
ONBUILD COPY  runtime  /

# Setup directories and permissions
# The user can access the files as the owner, and root can access as the group (that way, --user root still works without caps).
# Write is granted, although that doesn't really matter in term of security

# Create a restricted user account (no shell, no home, disabled)
# XXX it seems this is busting docker build cache capabilities... builds are not cached anymore after that... which is annoying when there is large dependencies (ffmpeg)
ONBUILD RUN   set -eu; \
              adduser --system --no-create-home --home /nonexistent --gecos "in dockerfile user" \
                --uid $BUILD_UID \
                dubo-dubon-duponey \
              && mkdir -p /boot \
              && mkdir -p /config \
              && mkdir -p /data \
              && mkdir -p /certs \
              && chown -R $BUILD_UID:root /boot \
              && chown -R $BUILD_UID:root /config \
              && chown -R $BUILD_UID:root /data \
              && chown -R $BUILD_UID:root /certs \
              && find /boot   -type d -exec chmod -R 555 {} \; \
              && find /config -type d -exec chmod -R 555 {} \; \
              && find /data   -type d -exec chmod -R 777 {} \; \
              && find /certs  -type d -exec chmod -R 777 {} \; \
              && find /boot   -type f -exec chmod -R 555 {} \; \
              && find /config -type f -exec chmod -R 444 {} \; \
              && find /data   -type f -exec chmod -R 666 {} \; \
              && find /certs  -type f -exec chmod -R 666 {} \;

# Downgrade to system user
ONBUILD USER  dubo-dubon-duponey

ENTRYPOINT  ["/boot/entrypoint.sh"]
